(load #P"C:/HOME/quicklisp/setup.lisp")
(ql:quickload "cl-csv")
(print "_______START DATA_______")
(setq gameData (cl-csv:read-csv #P"normalData.csv"))

(setq data (cdr gameData))
(print data)

(setq ms_time 0)
(setq ms_point 0)
(setq count_el 0)

(mapcar (lambda (ele) 
    (setq ms_time (+ ms_time (parse-integer(caddr ele))))
    (setq ms_point (+ ms_point (parse-integer(cadddr ele))))
    (setq count_el (+ count_el 1))
) data)
(setq ms_time (/ ms_time count_el))
(setq ms_point (/ ms_point count_el))
(print "_______mathematical expectation of time_______")
(print (format nil "~f" ms_time))
(print "_______mathematical expectation of points_______")
(print (format nil "~f" ms_point))

(setq ds_point 0)
(mapcar (lambda (ele)
    (setq ds_point (+ ds_point (* (- (parse-integer(cadddr ele)) ms_point) (- (parse-integer(cadddr ele)) ms_point))))
) data)
(setq ds_point (/ ds_point count_el))
(print "_______mathematical variance of points_______")
(print (format nil "~f" ds_point))
(print "_______sqrt from mathematical variance of points_______")
(print (format nil "~f" (sqrt ds_point)))